# AUTOGENERATED! DO NOT EDIT! File to edit: notebooks/4a_mrna_content_regression.ipynb (unless otherwise specified).

__all__ = ['compute_metrics', 'metric_funcs']

# Cell
# export

import pandas
import os
import numpy
import seaborn
import logging
import matplotlib.pyplot as plt
from importlib import reload
from joblib import load, dump
from sklearn.model_selection import PredefinedSplit
from sklearn import metrics

numpy.random.seed(42)

# Cell

import time
import fcsparser
import sklearn.linear_model
import sklearn.model_selection
from calibration_singlecell import classification
from functools import partial
import scipy.stats

# Cell

metric_funcs = [
    metrics.explained_variance_score,
    metrics.max_error,
    metrics.mean_absolute_error,
    metrics.mean_squared_error,
    metrics.mean_squared_error,
    metrics.median_absolute_error,
    metrics.r2_score
]

def compute_metrics(paths, log):
    values = {f.__name__: [] for f in metric_funcs}
    for i, (path, Xy) in enumerate(zip(paths, Xy_test)):
        regr = load(path).predict(Xy[0])
        for f in metric_funcs:
            values[f.__name__].append(f(Xy[1], regr))

    if log:
        for k,v in values.items():
            print(f"{k}: {numpy.mean(v)} +- {scipy.stats.sem(v)}")
        print("----")

    return values