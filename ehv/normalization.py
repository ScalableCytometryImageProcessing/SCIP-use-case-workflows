# AUTOGENERATED! DO NOT EDIT! File to edit: notebooks/QC/ehv_feature_distributions_after_rfe.ipynb (unless otherwise specified).

__all__ = ['entropy', 'minmax', 'robust', 'qq', 'dists']

# Cell
# export

import pandas
import os
import numpy
import seaborn
import logging
import matplotlib.pyplot as plt
from matplotlib import cm
import matplotlib
from importlib import reload
from ehv import core
from pathlib import Path
import uuid
import re
import scipy

from pandas.api.types import CategoricalDtype

import pyarrow.parquet as pq

from ehv import core

plt.rcParams['figure.facecolor'] = 'white'

numpy.random.seed(42)

# Cell

def entropy(x):
        density, _ = numpy.histogram(x, density=True)
        return scipy.stats.entropy(density)

def minmax(df):
    return pandas.DataFrame(
        data=(df - df.min()) / (df.max() - df.min()),
        columns = df.columns,
        index = df.index
    )

def robust(df):
    loc = df.median()
    mad = df.mad()

    return (df - loc) / mad


def qq(df, probs):
    q = df.quantile(probs)
    return pandas.DataFrame(
        data=(df - q.loc[probs[0]]) / (q.loc[probs[1]] - q.loc[probs[0]]),
        columns = df.columns,
        index = df.index
    )

# Cell
def dists(df):
    ent = df.apply(entropy, raw=True).sort_values()

    fig, ax = plt.subplots(figsize=(10, 20))
    seaborn.stripplot(
        data=pandas.melt(df.sample(n=10000),
        value_vars=df.columns), y="variable", x="value",
        order=ent.index,
        ax=ax, s=1, alpha=.5
    )

    return ent